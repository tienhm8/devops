version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devops-app
    restart: unless-stopped
    tty: true
    env_file: .env
    working_dir: /var/www/html
    environment:
      PHP_IDE_CONFIG: "serverName=${SERVER_NAME}"
    volumes:
      - ./src:/var/www/html:cached
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - devops-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # For Linux

  webserver:
    image: nginx:alpine
    container_name: devops-nginx
    restart: unless-stopped
    tty: true
    env_file: .env
    ports:
      - "${HOST_NGINX_PORT}:80"
    volumes:
      - ./src:/var/www/html:cached
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - devops-network

  mariadb:
    image: mariadb:latest
    container_name: devops-mariadb
    restart: unless-stopped
    tty: true
    env_file: .env
    ports:
      - "${HOST_MARIADB_PORT}:3306"
    volumes:
      - ./docker/data/mariadb:/var/lib/mysql
      - ./docker/mariadb/mariadb.cnf:/etc/mysql/mariadb.cnf
      - ./docker/mariadb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - devops-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: devops-phpmyadmin
    restart: unless-stopped
    env_file: .env
    depends_on:
      - mariadb
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - "${HOST_PHPMYADMIN_PORT}:80"
    networks:
      - devops-network

  mongo:
    image: mongo:latest
    container_name: devops-mongo
    restart: unless-stopped
    env_file: .env
    ports:
      - ${HOST_MONGO_PORT}:27017
    volumes:
      - ./docker/data/mongodb:/var/lib/mongodb
    networks:
      - devops-network

  postgres:
    image: postgres:latest
    container_name: devops-postgres
    restart: unless-stopped
    tty: true
    env_file: .env
    ports:
      - "${HOST_POSTGRES_PORT}:5432"
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - devops-network

  redis-cache:
    image: redis:latest
    container_name: devops-redis-cache
    restart: always
    env_file: .env
    ports:
      - "${HOST_REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass WPNMHpylaQjkPkI8oUBLk73ucNM3R1OWxtzJodhrGLVRqHZRr5Vt1vWrney2jjUQa5jjJC2/8HajqKX
    volumes:
      - ./docker/data/redis:/redis/cache

  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: devops-mailhog
    env_file: .env
    ports:
      - "${HOST_SMTP_PORT}:1025"
      - "${HOST_MAILHOG_PORT}:8025"
    networks:
      - devops-network

  rabbitmq:
    image: 'rabbitmq:3-management-alpine'
    container_name: devops-rabbitmq
    env_file: .env
    ports:
      - "${HOST_RABBITMQ_MESSAGE_BROKER_PORT}:5672"
      - "${HOST_RABBITMQ_MANAGEMENT_WEB_UI_PORT}:15672"
    volumes:
      - ./docker/data/rabbitmq/data:/var/lib/rabbitmq/data
      - ./docker/data/rabbitmq/logs:/var/log/rabbitmq/log
    networks:
      - devops-network

networks:
  devops-network:
    driver: bridge

volumes:
  mariadb-data:
    driver: local
  mongodb-data:
    driver: local
  postgres-data:
    driver: local
  redis-cache-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local
